// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  date        DateTime
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Spot        Spot[]
}

model Spot {
  id                 String               @id @default(uuid())
  name               String
  status             SpotStatus
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  eventId            String
  Event              Event                @relation(fields: [eventId], references: [id])
  ReservationHistory ReservationHistory[]
  Ticket             Ticket?
}

enum SpotStatus {
  available
  reserved
}

model Ticket {
  id         String     @id @default(uuid())
  email      String
  ticketKind TicketKind
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  spotId     String
  Spot       Spot       @relation(fields: [spotId], references: [id])

  @@unique([spotId])
}

model ReservationHistory {
  id         String       @id @default(uuid())
  email      String
  ticketKind TicketKind
  status     TicketStatus
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
  spotId     String
  Spot       Spot         @relation(fields: [spotId], references: [id])
}

enum TicketKind {
  full
  half
}

enum TicketStatus {
  reserved
  canceled
}

model Product {
  id                         String    @id @default(uuid())
  code                       String?
  description                String?
  unit                       String?
  NCM                        String?
  origin                     Int?
  price                      Float?
  valueIPI                   Float?
  observations               String?   @db.LongText
  situation                  String?
  stock                      Float?
  costPrice                  Float?
  supplierCode               String?
  supplier                   String?
  location                   String?
  maxStock                   Float?
  minStock                   Float?
  netWeight                  Float?
  grossWeight                Float?
  GTINEAN                    String?
  GTINEANPackage             String?
  productWidth               Float?
  productHeight              Float?
  productDepth               Float?
  expirationDate             DateTime?
  supplierProductDescription String?
  additionalDescription      String?   @db.LongText
  itemsPerBox                Float?
  productVariation           String?
  productionType             String?
  IPIClassification          String?
  serviceListCode            String?
  itemType                   String?
  tags                       String?
  tributes                   Float?
  parentCode                 String?
  integrationCode            Int?
  productGroup               String?
  brand                      String?
  CEST                       String?
  volumes                    Int?
  shortDescription           String?   @db.LongText
  crossDocking               Int?
  externalImageURLs          String?
  externalLink               String?
  supplierWarrantyMonths     String?
  cloneParentData            String?
  productCondition           String?
  freeShipping               String?
  FCI                        String?
  video                      String?
  department                 String?
  unitOfMeasure              String?
  purchasePrice              Float?
  ICMSBaseRetentionValue     Float?
  ICMSRetentionValue         Float?
  ICMSOwnSubstituteValue     Float?
  productCategory            String?
  additionalInformation      String?
}
